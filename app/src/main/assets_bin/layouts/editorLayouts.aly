{--各种编辑器，编辑器的id将被赋予成局部变量
  --[[
格式：
  EditorViewName={
    layout={layout},
    action={
      undo="default",
      redo="default",
      format="default",
      search="default",
      getText="default",
      setText="default",
    },
  },
  
]]
  NoneView={
    layout={
      LinearLayout;
      id="editorParent";
      layout_height="fill";
      layout_width="fill";
      gravity="center";
      orientation="vertical";
      --[[
      {
        AppCompatImageView;
        imageResource=R.drawable.ic_empty_state;
        layout_height="320dp";
        layout_width=="320dp";
        scaleType="fitCenter"
      };]]
      {
        TextView;
        text="No files opened"
      };
    },

  },

  LuaEditor={--Lua编辑器
    layout={
      FrameLayout;
      layout_height="fill";
      layout_width="fill";
      id="editorParent";
      layoutTransition=newLayoutTransition();
      {
        ProgressBar;--进度条
        id="progressBar";
        layout_gravity="center";
      };
      {
        EditText;--手写编辑框
        layout_width="fill";
        layout_height="fill";
        id="pencilEdit";
        gravity="top|left";
        text=" ";
        textSize=0;
      };
      {
        MyLuaEditor;--Lua编辑器
        layout_height="fill";
        id="editor";
        layout_width="fill";
        focusable=true;
        textHighlightColor=0x99616161;
        keywordColor=0xff3f51b5;
        stringColor=0xffc2185b;
        commentColor=0xff9e9e9e;
        basewordColor=theme.color.Blue;
        userwordColor=0xff5c6bc0;
        textSize=math.dp2int(14);
      };
    },
    init=function(ids,config)
      local editor,pencilEdit,progressBar,editorParent=ids.editor,ids.pencilEdit,ids.progressBar,ids.editorParent

      --application.set("luaeditor_initialized",false)--强制初始化编辑器
      if not(application.get("luaeditor_initialized")) then--编辑器未初始化
        editorParent.removeView(pencilEdit)--先移除view，避免手写输入以及编辑器渲染导致的bug
        editorParent.removeView(editor)
        local editorText=editor.text--保存一下编辑器内文字，
        editor.text=""--防止渲染文字造成的卡顿
        local keysList={EditorsManager.keyWords,EditorsManager.jesse205KeyWords}
        activity.newTask(function(keyWords,jesse205KeyWords)
          require "import"
          import "androidApis.editor.androluaApis"
          import "androidApis.editor.systemApis"

          local namesCheck={}
          local application=activity.getApplication()
          function addPackages(lang,packages)
            for index,package in pairs(packages) do
              local methods={}
              local packageTable=_G[package]
              local packageType=type(packageTable)

              if packageType=="table" then
                for method,func in pairs(packageTable) do
                  table.insert(methods,method)
                end
               elseif packageType=="userdata" then
                local inserted={}
                local class=packageTable.getClass()
                pcall(function()
                  for index,content in ipairs(luajava.astable(class.getMethods())) do
                    local name=content.getName()
                    if not(inserted[name]) then
                      inserted[name]=true
                      table.insert(methods,name)
                    end
                  end
                end)
              end
              lang.a(package,methods)
            end
          end
          local Lexer=luajava.bindClass("b.b.a.b.k")
          local lang=Lexer.e()

          local names=application.get("editorBaseList")
          if not(names) then
            names=lang.g()--获取现在的names
            application.set("editorBaseList",names)
          end
          names=luajava.astable(names)
          for index,content in ipairs(names) do
            namesCheck[content]=true
          end

          for index,content in ipairs({androluaApis,systemApis,luajava.astable(keyWords)}) do--插入新的names
            for index,content in ipairs(content) do
              if not(namesCheck[content]) then
                table.insert(names,content)
                namesCheck[content]=true
              end
            end
          end
          if activity.getSharedData("AndroidX_Highlight") then
            import "androidApis.editor.androidxApis"
            for index,content in ipairs(androidxApis) do
              if not(namesCheck[content]) then
                table.insert(names,content)
                namesCheck[content]=true
              end
            end
          end

          addPackages(lang,{"activity","application","LuaUtil","android","R"})

          if activity.getSharedData("Jesse205Lib_Highlight") then--添加杰西205库
            notLoadTheme=true
            require "Jesse205"
            for index,content in ipairs(luajava.astable(jesse205KeyWords)) do
              if not(namesCheck[content]) then
                table.insert(names,content)
                namesCheck[content]=true
              end
            end
            for index,content in ipairs(StyleWidget.types) do
              if not(namesCheck[content]) then
                table.insert(names,content)
                namesCheck[content]=true
              end
            end
            addPackages(lang,{"string","utf8","math","theme","Jesse205","AppPath","MyToast"})
          end
          lang.B(names)--设置成新的names
          return true
        end,
        function(success)
          editor.respan()
          editor.invalidate()--不知道干啥的，调用一下就对了
          if editorText~="" then
            editor.text=editorText
          end
          editorParent.addView(pencilEdit)
          editorParent.addView(editor)
          editorParent.removeView(progressBar)--移除进度条
          application.set("luaeditor_initialized",success)
          MyAnimationUtil.ScrollView.onScrollChange(editor,editor.getScrollX(),editor.getScrollY(),0,0,appBarLayout,nil,true)
          editorParent.setLayoutTransition(newLayoutTransition() or nil)
        end).execute(keysList)

       else--已初始化过编辑器
        editorParent.removeView(progressBar)--移除进度条
        editorParent.setLayoutTransition(newLayoutTransition() or nil)
      end

      editor.onScrollChange=function(view,l,t,oldl,oldt)
        MyAnimationUtil.ScrollView.onScrollChange(view,l,t,oldl,oldt,appBarLayout)
      end
      LuaEditorHelper.applyStyleToolBar(editor)
      LuaEditorHelper.applyMagnifier(editor,magnifier,magnifierUpdateTi)
      LuaEditorHelper.applyPencilInput(editor,pencilEdit)
    end,
    action={
      undo="default",
      redo="default",
      format="default",
      search="default",
      getText="default",
      setText="default",
      paste="default",
      format="default",
      setTextSize="default",
      getTextSize="default",
      getScrollX="default",
      getScrollY="default",
      scrollTo="default",
      setSelection="default",
      getSelectionEnd="default",
      check=function(ids,config,show)
        local editor=ids.editor
        local state,message=loadstring(editor.text)
        if show then
          if message then
            local line,data=message:match("%[string \".-%\"]:(%d+): (.+)")
            editor.gotoLine(tonumber(line))
            showSnackBar(line..": "..data)
           else
            showSnackBar(R.string.checkCode_noGrammaticalErrors)
          end
        end
        return toboolean(state),message
      end,
      commented=function(ids,config)
        local editor=ids.editor
        local selectedText=editor.getSelectedText()
        if #selectedText~=0 then
          if selectedText:find("\n") then
            local equals=""
            while selectedText:find("]"..equals.."]") do
              equals=equals.."="
            end
            editor.paste("--["..equals.."["..selectedText.."]"..equals.."]")
           else
            editor.paste("--"..selectedText.."")
          end
        end
      end,

    },
    supportScroll=true;
    defaultText=[[require "import"
import "Jesse205"

]]
  },
  CodeEditor={
    layout={
      LinearLayoutCompat;
      layout_height="fill";
      layout_width="fill";
      --layoutTransition=newLayoutTransition();
      id="editorParent";
      {
        MyCodeEditor;
        layout_height="fill";
        id="editor";
        layout_width="fill";
        focusable=true;
        nonPrintablePaintingFlags=CodeEditor.FLAG_DRAW_WHITESPACE_LEADING;
        textSize=14;
        overScrollEnabled=false;
      };
    },
    init=function(ids,config)
      local editor,editorParent=ids.editor,ids.editorParent
      import "io.github.rosemoe.editor.widget.schemes.SchemeDarcula"
      import "io.github.rosemoe.editor.widget.schemes.SchemeGitHub"

      if ThemeUtil.isNightMode() then
        editor.setColorScheme(SchemeDarcula())
       else
        editor.setColorScheme(SchemeGitHub())
      end
      local fontFile=File(LuaApplication.getInstance().getLuaExtDir("fonts"), "default.ttf")
      if fontFile.exists() then
        editor.setTypefaceText(Typeface.createFromFile(fontFile))
       else
        editor.setTypefaceText(Typeface.MONOSPACE)
      end
    end,
    action={
      undo="default",
      redo="default",
      format=false,
      check=false,
      paste=function(ids,config,text)
        local editor=ids.editor
        editor.cursor.onCommitText(text)
      end,
      setTextSize=nil,
      getTextSize=nil,
      getScrollX=nil,
      getScrollY=nil,
      scrollTo="default",
      search={
        start=function(ids)
          ids.editor.mStartedActionMode=1
        end,
        search=function(ids,config,text,gotoNext)
          local editor=ids.editor
          editor.getSearcher().search(tostring(text))
          if gotoNext then
            editor.getSearcher().gotoNext()
          end
        end,
        finish=function(ids,config)
          local editor=ids.editor
          editor.mStartedActionMode=0
          editor.getSearcher().stopSearch()
        end
      },
      getText="default",
      setText=function(ids,config,text)
        ids.editor.setText(text)
      end,
    },
    supportScroll=true;
  },
  PhotoView={
    layout={
      LinearLayoutCompat;
      layout_height="fill";
      layout_width="fill";
      --layoutTransition=newLayoutTransition();
      id="editorParent";
      --visibility=View.GONE;
      {
        PhotoView;
        layout_height="fill";
        id="editor";
        layout_width="fill";
        padding="32dp";
      };
    },
    --[[
    action={
      undo=nil,
      redo=nil,
      format=nil,
      search=nil,
    },]]
  }
}
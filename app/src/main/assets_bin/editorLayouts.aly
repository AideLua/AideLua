{--各种编辑器，编辑器的id将被赋予成局部变量
  --[[
格式：
  EditorViewName={
    layout={layout},
    action={
      undo="default",
      redo="default",
      format="default",
      search="default",
      getText="default",
      setText="default",
    },
  },
  
]]
  NoneView={
    layout={
      LinearLayout;
      id="editorParent";
      layout_height="fill";
      layout_width="fill";
      gravity="center";
      {
        LinearLayout;
        gravity="center";
        orientation="vertical";
        layout_margin="16dp";
        {
          AppCompatImageView;
          imageResource=R.drawable.ic_undraw_opened_tabs;
          layout_height="240dp";
          layout_width="240dp";
          scaleType="fitCenter";
          layout_weight=1;
        };
        {
          TextView;
          text="No files opened";
          textSize="16dp";
        };
      };
    },

  },

  LuaEditor={--Lua编辑器
    layout={
      FrameLayout;
      layout_height="fill";
      layout_width="fill";
      id="editorParent";
      layoutTransition=newLayoutTransition();
      {
        ProgressBar;--进度条
        id="progressBar";
        layout_gravity="center";
      };
      {
        EditText;--手写编辑框
        layout_width="fill";
        layout_height="fill";
        id="pencilEdit";
        gravity="top|left";
        text=" ";
        textSize=0;
      };
      {
        MyLuaEditor;--Lua编辑器
        layout_height="fill";
        id="editor";
        layout_width="fill";
        focusable=true;
        textHighlightColor=0x99616161;
        keywordColor=0xff3f51b5;
        stringColor=0xffc2185b;
        commentColor=0xff9e9e9e;
        basewordColor=theme.color.Blue;
        userwordColor=0xff5c6bc0;
        textSize=math.dp2int(14);
        --focusableInTouchMode=false;
      };
    },
    init=function(ids,config)
      local editor,pencilEdit,progressBar,editorParent=ids.editor,ids.pencilEdit,ids.progressBar,ids.editorParent
      editor.onScrollChange=function(view,l,t,oldl,oldt)
        MyAnimationUtil.ScrollView.onScrollChange(view,l,t,oldl,oldt,appBarLayout)
      end
      LuaEditorHelper.initKeys(editor,editorParent,pencilEdit,progressBar)
      LuaEditorHelper.applyStyleToolBar(editor)
      LuaEditorHelper.applyMagnifier(editor)
      LuaEditorHelper.applyPencilInput(editor,pencilEdit)
    end,
    onTypefaceChangeListener=function(ids,config,editor,typeface,boldTypeface,italicTypeface)
      editor.setTypeface(typeface)
      editor.setBoldTypeface(boldTypeface)
      editor.setItalicTypeface(italicTypeface)
    end,
    action={
      undo="default",
      redo="default",
      format="default",
      search="default",
      getText="default",
      setText="default",
      paste="default",
      format="default",
      setTextSize="default",
      getTextSize="default",
      getScrollX="default",
      getScrollY="default",
      scrollTo="default",
      selectText="default",
      setSelection="default",
      getSelectionEnd="default",
      check=function(ids,config,show)
        local editor=ids.editor
        local state,message=loadstring(editor.text)
        if show then
          if message then
            local line,data=message:match("%[string \".-%\"]:(%d+): (.+)")
            editor.gotoLine(tonumber(line))
            showSnackBar(line..": "..data)
           else
            showSnackBar(R.string.checkCode_noGrammaticalErrors)
          end
        end
        return toboolean(state),message
      end,
      commented=function(ids,config)
        local editor=ids.editor
        local selectedText=editor.getSelectedText()
        if #selectedText~=0 then
          if selectedText:find("\n") then
            local equals=""
            while selectedText:find("]"..equals.."]") do
              equals=equals.."="
            end
            editor.paste("--["..equals.."["..selectedText.."]"..equals.."]")
           else
            editor.paste("--"..selectedText.."")
          end
        end
      end,

    },
    supportScroll=true;
    defaultText=[[require "import"
import "jesse205"

]],
    --将要添加到LuaEditor的关键词列表
    --更改后需要执行application.set("luaeditor_initialized", false)，以便在下次进入页面时更新
    --使用activity.recreate()重启页面
    --index为方便更改内容，请使用string类型
    keywordsList={
      --一些常用但不自带的类
      otherWords=String({"PhotoView","LuaLexerIteratorBuilder"})
    },
    packagesList={
      --otherPackages=Map({hello=String({"world"}),jesse205=String({"nb"})})
    },

    normalKeywords=String({
      --一些事件
      "onCreate","onStart","onResume","onPause","onStop","onDestroy",
      "onActivityResult","onResult","onCreateOptionsMenu","onOptionsItemSelected",
      "onTouchEvent","onKeyLongPress","onConfigurationChanged","onHook",
      "onAccessibilityEvent","onKeyUp","onKeyDown","onError","onVersionChanged",

      "onClick","onTouch","onLongClick","onItemClick","onItemLongClick",
      "onContextClick","onScroll","onScrollChange","onNewIntent",
      "onSaveInstanceState",

      --一些自带的类或者包
      "android","R",
    }),
    jesse205Keywords=String({
      "newActivity","getSupportActionBar","getSharedData","setSharedData",
      "getString","getPackageName","getColorStateList","getNetErrorStr",

      --一些标识
      "initApp","notLoadTheme","useCustomAppToolbar",
      "resources","application","inputMethodService","actionBar",
      "notLoadTheme","darkStatusBar","darkNavigationBar",
      "window","safeModeEnable","notSafeModeEnable","decorView",

      "theme","formatResStr","autoSetToolTip",
      "showLoadingDia","closeLoadingDia","getNowLoadingDia",
      "showErrorDialog","toboolean","rel2AbsPath","copyText",
      "newSubActivity","isDarkColor","openInBrowser","openUrl",
      "loadlayout2","showSimpleDialog","getLocalLangObj",
      "newLayoutTransition",

      "AppPath","ThemeUtil","EditDialogBuilder","ImageDialogBuilder",
      "MyToast","AutoToolbarLayout","PermissionUtil",
      "AutoCollapsingToolbarLayout","SettingsLayUtil","jesse205",
      "StyleWidget","ScreenFixUtil",

      --自定义View或者Util
      "MyTextInputLayout","MyTitleEditLayout","MyEditDialogLayout",
      "MyTipLayout","MySearchLayout","MyAnimationUtil","MyStyleUtil",

      --适配器
      "MyLuaMultiAdapter","MyLuaAdapter","LuaCustRecyclerAdapter",
      "LuaCustRecyclerHolder","AdapterCreator",

      table.unpack(StyleWidget.types),

      "FileInfoUtils",
    }),

  },
  CodeEditor={
    layout={
      LinearLayoutCompat;
      layout_height="fill";
      layout_width="fill";
      --layoutTransition=newLayoutTransition();
      id="editorParent";
      {
        MyCodeEditor;
        layout_height="fill";
        id="editor";
        layout_width="fill";
        focusable=true;
        nonPrintablePaintingFlags=CodeEditor.FLAG_DRAW_WHITESPACE_LEADING;
        textSize=14;
        overScrollEnabled=false;
      };
    },
    init=function(ids,config)
      local editor,editorParent=ids.editor,ids.editorParent
      import "io.github.rosemoe.editor.widget.schemes.SchemeDarcula"
      import "io.github.rosemoe.editor.widget.schemes.SchemeGitHub"

      if ThemeUtil.isNightMode() then
        editor.setColorScheme(SchemeDarcula())
       else
        editor.setColorScheme(SchemeGitHub())
      end
      local fontFile=File(LuaApplication.getInstance().getLuaExtDir("fonts"), "default.ttf")
      if fontFile.exists() then
        editor.setTypefaceText(Typeface.createFromFile(fontFile))
       else
        editor.setTypefaceText(Typeface.MONOSPACE)
      end

    end,
    action={
      undo="default",
      redo="default",
      format=false,
      check=false,
      paste=function(ids,config,text)
        local editor=ids.editor
        editor.cursor.onCommitText(text)
      end,
      setTextSize=nil,
      getTextSize=nil,
      getScrollX=nil,
      getScrollY=nil,
      scrollTo="default",
      search={
        start=function(ids)
          ids.editor.mStartedActionMode=1
        end,
        search=function(ids,config,text,gotoNext)
          local editor=ids.editor
          editor.getSearcher().search(tostring(text))
          if gotoNext then
            editor.getSearcher().gotoNext()
          end
        end,
        finish=function(ids,config)
          local editor=ids.editor
          editor.mStartedActionMode=0
          editor.getSearcher().stopSearch()
        end
      },
      getText="default",
      setText=function(ids,config,text)
        ids.editor.setText(text)
      end,
    },
    supportScroll=false;
  },
  PhotoView={
    layout={
      LinearLayoutCompat;
      layout_height="fill";
      layout_width="fill";
      --layoutTransition=newLayoutTransition();
      id="editorParent";
      --visibility=View.GONE;
      {
        PhotoView;
        layout_height="fill";
        id="editor";
        layout_width="fill";
        padding="32dp";
      };
    },
    --[[
    action={
      undo=nil,
      redo=nil,
      format=nil,
      search=nil,
    },]]
  }
}
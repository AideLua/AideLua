---@type table<string, FileDecoder>
{
  txt={
    editor="CodeEditor",
    read=function(path)
      local content=isBinaryFile(path)
      if content==true then
        return nil,getString(R.string.file_cannot_open_compiled_file)
      end
      return content
    end,
    save=function(path,content)
      if getSharedData("editor_autoBackupOriginalFiles") then
        FilesTabManager.backupDir.mkdirs()
        local backupFilePath=FilesTabManager.backupPath.."/"..System.currentTimeMillis().."_"..File(path).getName()
        os.rename(path, backupFilePath)
      end
      local file=io.open(path,"w")
      if file then
        return pcall(function()
          file:write(content):close()
        end)
       else
        return true,getString(R.string.file_not_find)
      end
    end,
    language=EmptyLanguage(),
  },

  lua={
    super="txt",
    editor="LuaEditor",
    language=false,
  },
  aly={
    super="lua",
    preview={
      editor="FrameView",
      apply=function(filePath,fileType,view)
        view.removeAllViews()
        
      end,
    },
  },

  xml={
    super="txt",
    language=JavaLanguage(),
  },
  java={
    super="txt",
    language=JavaLanguage(),
  },
  html={
    super="txt",
    language=HTMLLanguage(),
  },
  json={
    super="txt",
    language=JavaLanguage(),
  },
  gradle={super="txt"},
  bat={super="txt"},
  properties={super="txt"},
  md={super="txt"},
  markdown={super="txt"},

  png={
    editor="PhotoView",
    apply=function(filePath,fileType,view)
      local options=RequestOptions()
      options.skipMemoryCache(true)--跳过内存缓存
      options.diskCacheStrategy(DiskCacheStrategy.NONE)--不缓冲disk硬盘中
      Glide.with(activity).load(filePath).apply(options).into(view)
    end,
    read=false,
    save=false,
  },
  jpg={super="png"},
  gif={super="png"},
  webp={super="png"},
  --[[
  svg={
    editor="PhotoView",
    apply=function(filePath,fileType,view)
      Sharp.loadFile(File(filePath)).into(view)
    end,
 },]]
  svg={
    super="xml",
    preview={
      editor="PhotoView",
      apply=function(filePath,fileType,view)
        Sharp.loadFile(File(filePath)).into(view)
      end,
    },
  },
}
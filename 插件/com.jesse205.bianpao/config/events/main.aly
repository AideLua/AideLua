{
  onCreate=function()
    import "android.animation.ValueAnimator"
    import "android.media.MediaPlayer"
    local freeViews={}
    function create鞭炮View()
      local layout,layoutChild
      if #freeViews==0 then

        layout=loadlayout({
          FrameLayout;
          layout_width="56dp";
          layout_height="200dp";
          layout_gravity="center";
          rotation=-15;
          {
            FrameLayout;
            layout_width="fill";
            layout_height="fill";
            {
              View;
              layout_width="2dp";
              layout_height="fill";
              backgroundColor=0xFFFF0000;
              layout_gravity="center";
            };
            {
              View;
              layout_width="fill";
              layout_height="8dp";
              backgroundColor=0xFFFFFF00;
              layout_gravity="center|bottom";
            };
          };
        },nil,FrameLayout)
        local 炮Lay={
          View;
          layout_width="8dp";
          layout_height="24dp";
          backgroundColor=0xFFFF0000;
          layout_gravity="center|top";
          layout_marginRight="16dp";
          rotation=45;
        };
        layoutChild=layout.getChildAt(0)
        for index=1,5 do
          炮Lay.layout_marginLeft=0;
          炮Lay.layout_marginRight="16dp";
          炮Lay.rotation=45;
          炮Lay.layout_marginTop=((index-0.5)*32).."dp";
          layoutChild.addView(loadlayout(炮Lay,nil,FrameLayout))
          炮Lay.layout_marginLeft="16dp";
          炮Lay.layout_marginRight=0;
          炮Lay.rotation=-45;
          炮Lay.layout_marginTop=((index-0.5)*32).."dp";
          layoutChild.addView(loadlayout(炮Lay,nil,FrameLayout))
        end
       else
        layout=freeViews[#freeViews]
        freeViews[#freeViews]=nil
        layoutChild=layout.getChildAt(0)
      end
      local valueAnimator=ValueAnimator.ofInt({math.dp2int(200),0})
      valueAnimator.setDuration(1000)
      valueAnimator.setInterpolator(nil)
      valueAnimator.addUpdateListener({onAnimationUpdate=function(valueAnimator)
          local value=valueAnimator.getAnimatedValue()
          local params=layoutChild.getLayoutParams()
          params.height=value
          layoutChild.setLayoutParams(params)
      end})
      valueAnimator.addListener({onAnimationEnd=function()
          if layout.parent then
            layout.parent.removeView(layout)
            table.insert(freeViews,layout)
          end
      end})
      valueAnimator.start()
      return layout
    end
    鞭炮Ti=Ticker()
    鞭炮Ti.period=200
    鞭炮Ti.onTick=function()
      local view=create鞭炮View()
      view.translationX=math.random(editorGroup.getMeasuredWidth())
      view.translationY=math.random(editorGroup.getMeasuredHeight())
      editorGroup.addView(view)
    end
    鞭炮Ti.start()
    鞭炮Ti.setEnabled(false)
    振动Ti=Ticker()
    振动Ti.period=50
    振动Ti.onTick=function()
      editorGroup.performHapticFeedback(HapticFeedbackConstants.VIRTUAL_KEY,HapticFeedbackConstants.FLAG_IGNORE_GLOBAL_SETTING)
    end
    振动Ti.start()
    振动Ti.setEnabled(false)

    local _switchEditor=EditorsManager.switchEditor
    function EditorsManager.switchEditor(newEditorType,...)
      if newEditorType=="NoneView" then
        鞭炮Ti.setEnabled(true)
        振动Ti.setEnabled(true)
       else
        鞭炮Ti.setEnabled(false)
        振动Ti.setEnabled(false)
      end
      _switchEditor(newEditorType,...)
    end
  end,
  onDestroy=function()
    鞭炮Ti.stop()
    振动Ti.stop()
  end,
  onStop=function()
    鞭炮Ti.setEnabled(false)
    振动Ti.setEnabled(false)
  end,
  onStart=function()
    if not FilesTabManager.openState and ProjectManager.openState then
      鞭炮Ti.setEnabled(true)
      振动Ti.setEnabled(true)
     else
      鞭炮Ti.setEnabled(false)
      振动Ti.setEnabled(false)
    end
  end
}
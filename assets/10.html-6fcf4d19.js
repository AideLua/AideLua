import{_ as a,p as n,q as e,a1 as s}from"./framework-ea2a9e6e.js";const c={},l=s(`<h1 id="使用线程" tabindex="-1"><a class="header-anchor" href="#使用线程" aria-hidden="true">#</a> 使用线程</h1><p>需导入 <code>import</code> 模块，参看 <code>thread</code> <code>timer</code> 与 <code>task</code> 函数说明。 线程中使用独立环境运行，不能使用外部变量与函数，需要使用参数和回调与外部交互。</p><h2 id="异步任务" tabindex="-1"><a class="header-anchor" href="#异步任务" aria-hidden="true">#</a> 异步任务</h2><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token function">task</span><span class="token punctuation">(</span>func<span class="token punctuation">,</span>args<span class="token punctuation">,</span>callback<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>func</code> 为任务执行代码或函数</li><li><code>args</code> 为参数</li><li><code>callback</code> 为回调函数</li><li>任务返回值将传递到回调函数</li></ul><p><code>task</code> 只能同时运行cpu核心x2个线程，更多任务按照顺序等待执行<br> 有一个特殊形式，第一个参数为数值时，将延时该数值毫秒后执行回调函数</p><h2 id="线程" tabindex="-1"><a class="header-anchor" href="#线程" aria-hidden="true">#</a> 线程</h2><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>t<span class="token operator">=</span><span class="token function">thread</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span>args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>f</code> 为线程中执行的代码或函数或文件路径</li><li><code>args</code> 为初始传入参数</li></ul><h3 id="调用线程中方法" tabindex="-1"><a class="header-anchor" href="#调用线程中方法" aria-hidden="true">#</a> 调用线程中方法</h3><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token function">call</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>fn<span class="token punctuation">,</span>args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>t</code> 为线程</li><li><code>fn</code> 为函数名称</li><li><code>args</code> 为参数</li></ul><h3 id="设置线程变量" tabindex="-1"><a class="header-anchor" href="#设置线程变量" aria-hidden="true">#</a> 设置线程变量</h3><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token function">set</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>fn<span class="token punctuation">,</span>arg<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>t</code> 为线程</li><li><code>fn</code> 为变量名称</li><li><code>arg</code> 为变量值</li></ul><h3 id="线程调用主线程中方法" tabindex="-1"><a class="header-anchor" href="#线程调用主线程中方法" aria-hidden="true">#</a> 线程调用主线程中方法</h3><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token function">call</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span>args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>fn</code> 为函数名称</li><li><code>args</code> 为参数</li></ul><h3 id="线程设置主线程变量" tabindex="-1"><a class="header-anchor" href="#线程设置主线程变量" aria-hidden="true">#</a> 线程设置主线程变量</h3><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token function">set</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span>arg<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>fn</code> 为变量名称</li><li><code>arg</code> 为变量值</li></ul><div class="custom-container warning"><p class="custom-container-title">注意</p><p>参数类型为 字符串，数值，Java对象，布尔值 与 <code>nil</code> 线程要使用 <code>quit</code> 结束线程。</p></div><p>定时器</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>t<span class="token operator">=</span><span class="token function">timer</span><span class="token punctuation">(</span>func<span class="token punctuation">,</span>delay<span class="token punctuation">,</span>period<span class="token punctuation">,</span>args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>func</code> 为定时器执行的函数</li><li><code>delay</code> 为定时器延时</li><li><code>period</code> 为定时器间隔</li><li><code>args</code> 为初始化参数</li></ul><p><code>t.enabled=false</code> 暂停定时器 <code>t.enabled=true</code> 启动定时器 <code>t.stop()</code> 停止定时器</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>定时器函数定义run函数时定时器重复执行run函数，否则重复执行构建时的func函数</p></div>`,27),i=[l];function d(o,t){return n(),e("div",null,i)}const p=a(c,[["render",d],["__file","10.html.vue"]]);export{p as default};

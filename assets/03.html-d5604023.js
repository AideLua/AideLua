import{_ as a,p as e,q as n,a1 as s}from"./framework-ea2a9e6e.js";const i={},d=s(`<h1 id="导入包或类" tabindex="-1"><a class="header-anchor" href="#导入包或类" aria-hidden="true">#</a> 导入包或类</h1><p>在使用 Java 类之前需要导入相应的包或者类</p><h2 id="导入包" tabindex="-1"><a class="header-anchor" href="#导入包" aria-hidden="true">#</a> 导入包</h2><p>用包名 <code>.*</code> 的形式导入包</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>import <span class="token string">&quot;android.widget.*&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="导入类" tabindex="-1"><a class="header-anchor" href="#导入类" aria-hidden="true">#</a> 导入类</h2><p>用完整的类名导入类</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>import <span class="token string">&quot;android.widget.Button&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>导入内部类</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>import <span class="token string">&quot;android.view.View_OnClickListener&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者在导入类后直接使用内部类</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>View<span class="token punctuation">.</span>OnClickListene
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>包名和类名必须用引号包围，因为 <code>import</code> 实际上是一个函数</p></div><h2 id="导入为局部变量" tabindex="-1"><a class="header-anchor" href="#导入为局部变量" aria-hidden="true">#</a> 导入为局部变量</h2><p>导入的类为全局变量，你可以使用此形式保存为局部变量，以解决类名冲突问题。</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> Button<span class="token operator">=</span>import <span class="token string">&quot;android.widget.Button&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>此代码在新版本 Androlua+ 编辑器界面会报错，您不必担心，因为新编辑器来自 Luaj，会有部分代码不兼容。</p></div><p>也可以使用 <code>luajava</code> 导入</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> Button<span class="token operator">=</span>luajava<span class="token punctuation">.</span><span class="token function">bindClass</span><span class="token punctuation">(</span><span class="token string">&quot;android.widget.Button&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,19),t=[d];function l(o,r){return e(),n("div",null,t)}const u=a(i,[["render",l],["__file","03.html.vue"]]);export{u as default};

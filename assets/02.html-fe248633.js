import{_ as e,p as a,q as d,a1 as o}from"./framework-ea2a9e6e.js";const c={},s=o(`<h1 id="导入模块" tabindex="-1"><a class="header-anchor" href="#导入模块" aria-hidden="true">#</a> 导入模块</h1><h2 id="简化难度" tabindex="-1"><a class="header-anchor" href="#简化难度" aria-hidden="true">#</a> 简化难度</h2><p>您可以导入 <code>import</code> 模块，简化写代码的难度。</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>require <span class="token string">&quot;import&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>目前程序还内置 <code>bmob</code> , <code>bson</code> , <code>canvas</code> , <code>cjson</code> , <code>crypt</code> , <code>ftp</code> , <code>gl</code> , <code>http</code> , <code>import</code> , <code>md5</code> , <code>smtp</code> , <code>socket</code> , <code>sensor</code> , <code>xml</code> , <code>zip</code> , <code>zlib</code> 等模块。</p><h2 id="导入方式" tabindex="-1"><a class="header-anchor" href="#导入方式" aria-hidden="true">#</a> 导入方式</h2><p>一般模块导入的形式，但是这样导入的是局部变量</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> http<span class="token operator">=</span>require <span class="token string">&quot;http&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>导入 <code>import</code> 后也可以使用此形式，导入为全局变量</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>import <span class="token string">&quot;http&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,10),n=[s];function t(i,r){return a(),d("div",null,n)}const p=e(c,[["render",t],["__file","02.html.vue"]]);export{p as default};

import{_ as c,M as d,p as l,q as r,R as t,t as n,N as e,U as o,a1 as p}from"./framework-ea2a9e6e.js";const u={},m={id:"settings-aly",tabindex:"-1"},h=t("a",{class:"header-anchor",href:"#settings-aly","aria-hidden":"true"},"#",-1),v={class:"custom-container details"},g=t("summary",null,"本页内容",-1),k={class:"table-of-contents"},b=t("p",null,[t("code",null,"config/events/settings.aly"),n(" : 设置页面事件存放文件")],-1),_=t("h2",{id:"事件说明",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#事件说明","aria-hidden":"true"},"#"),n(" 事件说明")],-1),y={id:"oncreate-savedinstancestate",tabindex:"-1"},f=t("a",{class:"header-anchor",href:"#oncreate-savedinstancestate","aria-hidden":"true"},"#",-1),I={href:"https://developer.android.google.cn/guide/components/activities/activity-lifecycle?hl=zh_cn#oncreate",target:"_blank",rel:"noopener noreferrer"},M=p(`<p>这是页面创建时候执行的事件 <br></p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>savedInstanceState</td><td><strong>Bundle</strong>: 如果 Activity 在先前被关闭后被重新初始化，那么这个 Bundle 包含它最近在 onSaveInstanceState(Bundle) 中提供的数据。注意：默认值为空。</td></tr></tbody></table><h3 id="onloaditemslist-items" tabindex="-1"><a class="header-anchor" href="#onloaditemslist-items" aria-hidden="true">#</a> onLoadItemsList(items)</h3><p>列表加载事件，此处您可以添加您的插件的设置项</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>items</td><td><strong>table</strong> (list): 插件专属的设置项列表</td></tr></tbody></table><h3 id="onitemclick-views-key-data" tabindex="-1"><a class="header-anchor" href="#onitemclick-views-key-data" aria-hidden="true">#</a> onItemClick(views,key,data)</h3><p>点击项目事件</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>views</td><td><strong>table</strong> (map): 视图映射</td></tr><tr><td>key</td><td><strong>string</strong>: 设置项的 <code>key</code></td></tr><tr><td>data</td><td><strong>table</strong> (map): 设置项映射</td></tr></tbody></table><h2 id="设置项说明" tabindex="-1"><a class="header-anchor" href="#设置项说明" aria-hidden="true">#</a> 设置项说明</h2><p>这是一个简单的设置项示例：</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">--在 \`onLoadItemsList(items)\` 事件中</span>
<span class="token comment">--创建一个设置项</span>
item<span class="token operator">=</span><span class="token punctuation">{</span>
  SettingsLayUtil<span class="token punctuation">.</span>ITEM_NOSUMMARY<span class="token punctuation">;</span>
  icon<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  title<span class="token operator">=</span><span class="token string">&quot;设置项标题&quot;</span><span class="token punctuation">;</span>
  key<span class="token operator">=</span><span class="token string">&quot;plugin_item&quot;</span><span class="token punctuation">;</span>
  newPage<span class="token operator">=</span><span class="token keyword">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">--将新创建的设置项添加到列表内</span>
table<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>items<span class="token punctuation">,</span>item<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然通常不会创建一个新的 <code>item</code> 变量，因此会这么写</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">--在 \`onLoadItemsList(items)\` 事件中</span>
table<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>items<span class="token punctuation">,</span><span class="token punctuation">{</span>
  SettingsLayUtil<span class="token punctuation">.</span>ITEM_NOSUMMARY<span class="token punctuation">;</span>
  icon<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  title<span class="token operator">=</span><span class="token string">&quot;设置项标题&quot;</span><span class="token punctuation">;</span>
  key<span class="token operator">=</span><span class="token string">&quot;plugin_item&quot;</span><span class="token punctuation">;</span>
  newPage<span class="token operator">=</span><span class="token keyword">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>键</th><th>说明</th></tr></thead><tbody><tr><td><code>[1]</code></td><td>item 第一项，是一个 <code>number</code> 类型的类型ID</td></tr><tr><td>icon</td><td><strong>string</strong>: 图标路径，建议使用绝对路径</td></tr><tr><td>title</td><td><strong>string</strong>: 设置项标题</td></tr><tr><td>summary</td><td><strong>string</strong>: 设置项介绍</td></tr><tr><td>key</td><td><strong>string</strong>: 设置项标识，相当于设置项的ID</td></tr><tr><td>newPage</td><td><strong>boolean</strong>; <strong>string</strong>: 新页面标识，<code>true</code> 表示新页面，<code>&quot;newApp&quot;</code> 表示新APP，<code>false</code> 表示保持当前页面。此键仅用于设置右侧图标显示的类型</td></tr></tbody></table><details class="custom-container details"><summary>这是受支持的类型</summary><table><thead><tr><th>字段</th><th>数字</th><th>说明</th></tr></thead><tbody><tr><td>TITLE</td><td>1</td><td>标题项</td></tr><tr><td>ITEM</td><td>2</td><td>设置项，带有标题和介绍</td></tr><tr><td>ITEM_NOSUMMARY</td><td>3</td><td>设置项，仅带有标题</td></tr><tr><td>ITEM_SWITCH</td><td>4</td><td>设置项，带有标题、介绍和开关</td></tr><tr><td>ITEM_SWITCH_NOSUMMARY</td><td>5</td><td>设置项，带有标题和开关</td></tr><tr><td>ITEM_AVATAR</td><td>6</td><td>设置项，但是图标为大图</td></tr><tr><td>ITEM_ONLYSUMMARY</td><td>7</td><td>设置项，仅带有标题</td></tr></tbody></table><div class="custom-container tip"><p class="custom-container-title">提示</p><p>除标题外，每个项目都带有一个图标</p></div></details><div class="custom-container warning"><p class="custom-container-title">警告</p><p>请避免直接使用数字类型，因为不同软件版本所代表的设置项类型可能不一样</p><p>所有的字段都在 <code>SettingsLayUtil</code> 中，请使用 <code>SettingsLayUtil.XXX</code> 的形式获取类型ID，如：<code>SettingsLayUtil.ITEM_NOSUMMARY</code></p></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>您可以使用 <code>getPluginPath(packagename)</code> 获取当前插件存放路径，以确定图标存放路径</p><p>比如您的插件有一个图标</p><div class="language-文件树" data-ext="文件树"><pre class="language-文件树"><code>我的插件
  ├ ...
  ├ init.lua
  └ icon.png &lt;--
</code></pre></div><p>您可以使用 <code>getPluginPath(packagename)..&quot;/icon.png&quot;</code> 得到 <code>icon.png</code> 的路径</p></div>`,17);function x(S,q){const a=d("Badge"),s=d("router-link"),i=d("ExternalLinkIcon");return l(),r("div",null,[t("h1",m,[h,n(" settings.aly "),e(a,{text:"文件",vertical:"middle"}),n(),e(a,{text:"table",vertical:"middle"}),n(),e(a,{text:"Map",vertical:"middle"})]),t("details",v,[g,t("nav",k,[t("ul",null,[t("li",null,[e(s,{to:"#事件说明"},{default:o(()=>[n("事件说明")]),_:1}),t("ul",null,[t("li",null,[e(s,{to:"#oncreate-savedinstancestate"},{default:o(()=>[n("onCreate(savedInstanceState) "),e(a,{text:"生命周期",vertical:"middle"})]),_:1})]),t("li",null,[e(s,{to:"#onloaditemslist-items"},{default:o(()=>[n("onLoadItemsList(items)")]),_:1})]),t("li",null,[e(s,{to:"#onitemclick-views-key-data"},{default:o(()=>[n("onItemClick(views,key,data)")]),_:1})])])]),t("li",null,[e(s,{to:"#设置项说明"},{default:o(()=>[n("设置项说明")]),_:1})])])])]),b,_,t("h3",y,[f,n(" onCreate(savedInstanceState) "),e(a,{text:"生命周期",vertical:"middle"})]),t("p",null,[t("a",I,[n("Activity 生命周期：onCreate()"),e(i)])]),M])}const T=c(u,[["render",x],["__file","settings.html.vue"]]);export{T as default};

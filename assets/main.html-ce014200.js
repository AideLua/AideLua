import{_ as r,M as i,p as c,q as u,R as t,t as e,N as n,U as l,a1 as o}from"./framework-ea2a9e6e.js";const p={},h=t("p",null,"未完待续",-1),m={id:"main-aly",tabindex:"-1"},v=t("a",{class:"header-anchor",href:"#main-aly","aria-hidden":"true"},"#",-1),b={class:"custom-container details"},_=t("summary",null,"本页内容",-1),g={class:"table-of-contents"},f=t("p",null,[t("code",null,"config/events/main.aly"),e(" : 主页面事件存放文件")],-1),k=t("h2",{id:"事件说明",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#事件说明","aria-hidden":"true"},"#"),e(" 事件说明")],-1),x={id:"oncreate-savedinstancestate",tabindex:"-1"},y=t("a",{class:"header-anchor",href:"#oncreate-savedinstancestate","aria-hidden":"true"},"#",-1),w={href:"https://developer.android.google.cn/guide/components/activities/activity-lifecycle?hl=zh_cn#oncreate",target:"_blank",rel:"noopener noreferrer"},q=o("<p>这是页面创建时候执行的事件 <br> 此时软件即将自动打开上一次或者传入的工程，以及刷新 <code>toggle</code> 状态</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>savedInstanceState</td><td><strong>Bundle</strong>: 如果 Activity 在先前被关闭后被重新初始化，那么这个 Bundle 包含它最近在 onSaveInstanceState(Bundle) 中提供的数据。注意：默认值为 <code>nil</code>。</td></tr></tbody></table>",2),M=t("thead",null,[t("tr",null,[t("th",null,"返回类型"),t("th",null,"说明")])],-1),S=t("td",null,"boolean",-1),L=t("code",null,"true",-1),T=o('<p>代码执行顺序：</p><blockquote><p>调用插件事件 - 判断返回值，检测并打开项目 - 同步 <code>toggle</code> 状态</p></blockquote><div class="custom-container warning"><p class="custom-container-title">注意</p><p>在 <strong>v5.0.3(50399)</strong> 之前，代码执行顺序为：</p><blockquote><p>检测并打开项目 - 调用插件事件 - 同步 <code>toggle</code> 状态</p></blockquote></div><h3 id="oncreateoptionsmenu-menu" tabindex="-1"><a class="header-anchor" href="#oncreateoptionsmenu-menu" aria-hidden="true">#</a> onCreateOptionsMenu(menu)</h3><p>这是创建菜单时执行的事件</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>menu</td><td><strong>Menu</strong>: 你在其中放置项目的选项菜单。</td></tr></tbody></table><p>代码执行顺序：</p><blockquote><p>添加自带菜单 - 执行插件事件</p></blockquote><h3 id="onoptionsitemselected-item" tabindex="-1"><a class="header-anchor" href="#onoptionsitemselected-item" aria-hidden="true">#</a> onOptionsItemSelected(item)</h3><p>这是菜单被点击时执行的事件</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>item</td><td><strong>MenuItem</strong>: 被选中的菜单项。此值不能为空。</td></tr></tbody></table><p>代码执行顺序：</p><blockquote><p>添加自带菜单 - 调用插件事件 - 标记 <code>LoadedMenu</code> 为 <code>true</code> - 刷新菜单状态</p></blockquote><div class="custom-container warning"><p class="custom-container-title">警告</p><p>Aide Lua 未使用标准的菜单更新方式，因此您使用 <code>activity.invalidateOptionsMenu()</code> 无法刷新菜单显示。相反，您应该使用 <code>refreshMenusState()</code> 来刷新菜单显示。</p></div><h3 id="onkeyshortcut-keycode-event" tabindex="-1"><a class="header-anchor" href="#onkeyshortcut-keycode-event" aria-hidden="true">#</a> onKeyShortcut(keyCode, event)</h3><p>按键被按 当一个快捷键事件没有被 Activity 中的任何视图处理时被调用。覆盖此方法以实现 Activity 的全局按键快捷方式。按键快捷方式也可以通过设置菜单项的快捷方式属性来实现。</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>keyCode</td><td><strong>int</strong>: event.getKeyCode() 中的值。</td></tr><tr><td>event</td><td><strong>KeyEvent</strong>: 按键事件的描述。</td></tr></tbody></table>',17),C=t("thead",null,[t("tr",null,[t("th",null,"返回类型"),t("th",null,"说明")])],-1),P=t("td",null,"boolean",-1),E=t("code",null,"true",-1),B=o('<p>代码执行顺序：</p><blockquote><p>调用插件事件 - 判断返回值，响应自带快捷键事件</p></blockquote><div class="custom-container warning"><p class="custom-container-title">注意</p><p>在 <strong>v5.0.4(50499)</strong> 之前，代码执行顺序为：</p><blockquote><p>响应自带快捷键事件 - 调用插件事件</p></blockquote></div><h3 id="onconfigurationchanged-config" tabindex="-1"><a class="header-anchor" href="#onconfigurationchanged-config" aria-hidden="true">#</a> onConfigurationChanged(config)</h3><p>配置文件发生改变，常见于屏幕旋转</p>',5),A=t("thead",null,[t("tr",null,[t("th",null,"参数"),t("th",null,"说明")])],-1),I=t("td",null,"config",-1),F={href:"https://developer.android.google.cn/reference/android/content/res/Configuration",target:"_blank",rel:"noopener noreferrer"},z=t("code",null,"nil",-1),V={id:"onresume",tabindex:"-1"},N=t("a",{class:"header-anchor",href:"#onresume","aria-hidden":"true"},"#",-1),j={href:"https://developer.android.google.cn/guide/components/activities/activity-lifecycle?hl=zh_cn#onresume",target:"_blank",rel:"noopener noreferrer"},D=t("p",null,"常见于返回到页面",-1),R={id:"onpause",tabindex:"-1"},W=t("a",{class:"header-anchor",href:"#onpause","aria-hidden":"true"},"#",-1),K={href:"https://developer.android.google.cn/guide/components/activities/activity-lifecycle?hl=zh_cn#onpause",target:"_blank",rel:"noopener noreferrer"},H=t("p",null,"Activity 暂停时执行，常见于切到后台",-1),O={id:"onstart",tabindex:"-1"},J=t("a",{class:"header-anchor",href:"#onstart","aria-hidden":"true"},"#",-1),U={href:"https://developer.android.google.cn/guide/components/activities/activity-lifecycle?hl=zh_cn#onstart",target:"_blank",rel:"noopener noreferrer"},X=t("p",null,"Activity 开始时执行，常见于回到页面",-1),G={id:"onstop",tabindex:"-1"},Q=t("a",{class:"header-anchor",href:"#onstop","aria-hidden":"true"},"#",-1),Y={href:"https://developer.android.google.cn/guide/components/activities/activity-lifecycle?hl=zh_cn#onstop",target:"_blank",rel:"noopener noreferrer"},Z=t("p",null,"Activity 停止时执行，常见于切到后台",-1),$={id:"ondestroy",tabindex:"-1"},tt=t("a",{class:"header-anchor",href:"#ondestroy","aria-hidden":"true"},"#",-1),et={href:"https://developer.android.google.cn/guide/components/activities/activity-lifecycle?hl=zh_cn#ondestroy",target:"_blank",rel:"noopener noreferrer"},nt=o(`<p>Activity 销毁时执行，常见于关闭页面</p><h3 id="onresult-name-action-content" tabindex="-1"><a class="header-anchor" href="#onresult-name-action-content" aria-hidden="true">#</a> onResult(name, action, content)</h3><p>有返回参数时执行，这里一般都是Lua页面返回的。</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>name</td><td>页面名称，Androlua 自动赋的值，多半为 <code>main</code>，不要管</td></tr><tr><td>action</td><td>事件名称，如 <code>project_created_successfully</code></td></tr><tr><td>content</td><td>返回的内容，目前只能接收一个内容</td></tr></tbody></table><div class="custom-container tip"><p class="custom-container-title">提示</p><p>在新Lua页面中返回参数：</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>activity<span class="token punctuation">.</span><span class="token function">result</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">&lt;</span>action<span class="token operator">&gt;</span>，<span class="token operator">&lt;</span>content<span class="token operator">&gt;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><h3 id="refreshmenusstate" tabindex="-1"><a class="header-anchor" href="#refreshmenusstate" aria-hidden="true">#</a> refreshMenusState()</h3><p>刷新菜单状态</p><h2 id="管理器、工具-api" tabindex="-1"><a class="header-anchor" href="#管理器、工具-api" aria-hidden="true">#</a> 管理器、工具 API</h2>`,8),at={id:"editorsmanager",tabindex:"-1"},st=t("a",{class:"header-anchor",href:"#editorsmanager","aria-hidden":"true"},"#",-1),lt=t("thead",null,[t("tr",null,[t("th",null,"键"),t("th",null,"类型"),t("th",null,"说明")])],-1),ot=t("tr",null,[t("td",null,"editor"),t("td",null,"View"),t("td",null,"编辑器视图")],-1),dt=t("tr",null,[t("td",null,[t("a",{href:"#editorlayouts"},"editorConfig")]),t("td",null,"table (map)"),t("td",null,"编辑器配置")],-1),it=t("tr",null,[t("td",null,"editorType"),t("td",null,"string"),t("td",null,"编辑器名称（有时也叫做编辑器类型）")],-1),rt=t("tr",null,[t("td",null,[t("a",{href:"#editorsmanager-actions"},"actions")]),t("td",null,"table (map)"),t("td",null,"编辑器事件映射")],-1),ct=t("a",{href:"#editorsmanager-actionswitheditor"},"actionsWithEditor",-1),ut=t("td",null,"table (map)",-1),pt=t("td",null,"编辑器事件映射，支持指定编辑器",-1),ht=t("tr",null,[t("td",null,"openNewContent(filePath,fileType,decoder)"),t("td",null,"function"),t("td",null,[e("打开新内容 "),t("br"),e(),t("strong",null,"filePath"),e(" (string): 文件路径 "),t("br"),e(),t("strong",null,"fileType"),e(" (string): 文件扩展名 "),t("br"),e(),t("strong",null,"decoder"),e(" (metatable(map)): 文件解析工具")])],-1),mt=t("tr",null,[t("td",null,"startSearch()"),t("td",null,"function"),t("td",null,"启动搜索")],-1),vt=t("tr",null,[t("td",null,"save2Tab()"),t("td",null,"function"),t("td",null,"保存到标签")],-1),bt=t("tr",null,[t("td",null,"checkEditorSupport(name)"),t("td",null,"function"),t("td",null,[e("检查编辑器是否支持功能 "),t("br"),e(),t("strong",null,"name"),e(" (string): 功能名称")])],-1),_t=t("tr",null,[t("td",null,"isEditor()"),t("td",null,"function"),t("td",null,"是不是可编辑的编辑器")],-1),gt=t("tr",null,[t("td",null,"switchPreview(state)"),t("td",null,"function"),t("td",null,[e("切换预览 "),t("br"),e(),t("strong",null,"state"),e(" (boolean): 状态")])],-1),ft=t("tr",null,[t("td",null,"switchLanguage(language)"),t("td",null,"function"),t("td",null,[e("切换语言 "),t("br"),e(),t("strong",null,"language"),e(" (Object): 语言")])],-1),kt=t("tr",null,[t("td",null,"switchEditor(editorType)"),t("td",null,"function"),t("td",null,[e("切换编辑器 "),t("br"),e(),t("strong",null,"editorType"),e(" (string): 编辑器类型")])],-1),xt=t("tr",null,[t("td",null,[t("a",{href:"#editorsmanager-symbolbar"},"symbolBar")]),t("td",null,"table (map)"),t("td",null,"符号栏")],-1),yt=t("a",{href:"#editorsmanager-typefacechangelisteners"},"typefaceChangeListeners",-1),wt=t("td",null,"table (list)",-1),qt=t("td",null,"编辑器字体监听器",-1),Mt=t("a",{href:"#editorsmanager-shareddatachangelisteners"},"sharedDataChangeListeners",-1),St=t("td",null,"table (map)",-1),Lt=t("td",null,"软件配置监听器",-1),Tt=t("tr",null,[t("td",null,"refreshEditorScrollState()"),t("td",null,"function"),t("td",null,"刷新编辑器滚动状态，包括阴影。")],-1),Ct=t("td",null,"table (map)",-1),Pt=t("td",null,"放大镜管理器",-1),Et=o('<details class="custom-container details"><summary>已废除</summary><table><thead><tr><th>键</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>keyWordsList</td><td>忘了</td><td>编辑器提示词列表</td></tr><tr><td>keyWords</td><td>String[]</td><td>编辑器默认提示词列表</td></tr><tr><td>jesse205KeyWords</td><td>String[]</td><td>Jesse205库提示词列表</td></tr><tr><td>fileType2Language</td><td>忘了</td><td>文件类型转语言索引列表</td></tr></tbody></table></details>',1),Bt={id:"editorsmanager-typefacechangelisteners",tabindex:"-1"},At=t("a",{class:"header-anchor",href:"#editorsmanager-typefacechangelisteners","aria-hidden":"true"},"#",-1),It=o(`<p>编辑器字体监听器</p><p>格式：</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token punctuation">{</span>
    <span class="token keyword">function</span><span class="token punctuation">(</span>typeface<span class="token punctuation">,</span> boldTypeface<span class="token punctuation">,</span> italicTypeface<span class="token punctuation">)</span>
        <span class="token comment">-- typeface: 支持字体</span>
        <span class="token comment">-- boldTypeface: 粗体</span>
        <span class="token comment">-- italicTypeface: 斜体 (意大利体)</span>

        <span class="token comment">-- 这里开始写你的代码</span>
    <span class="token keyword">end</span><span class="token punctuation">,</span>
    <span class="token comment">-- ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>在编辑器初始化时，一般不需要您刻意地把 <code>onTypefaceChangeListener</code> 添加到此列表。因为 EditorsManager 会自动帮您完成添加。</p></div>`,4),Ft={id:"editorsmanager-shareddatachangelisteners",tabindex:"-1"},zt=t("a",{class:"header-anchor",href:"#editorsmanager-shareddatachangelisteners","aria-hidden":"true"},"#",-1),Vt=o(`<p>编辑器字体监听器</p><p>格式：</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token punctuation">{</span>
    key1<span class="token operator">=</span><span class="token punctuation">{</span>
      <span class="token keyword">function</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span>
        <span class="token comment">-- newValue: 新值</span>
        <span class="token comment">-- 这里开始写你的代码</span>
      <span class="token keyword">end</span><span class="token punctuation">,</span>
      <span class="token comment">-- ...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    key2<span class="token operator">=</span><span class="token punctuation">{</span>
      <span class="token keyword">function</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span>
        <span class="token comment">-- newValue: 新值</span>
        <span class="token comment">-- 这里开始写你的代码</span>
      <span class="token keyword">end</span><span class="token punctuation">,</span>
      <span class="token comment">-- ...</span>
    <span class="token punctuation">}</span>
    <span class="token comment">-- ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>在编辑器初始化时，一般不需要您刻意地把 <code>onSharedDataChangeListeners</code> 添加到此列表。因为 EditorsManager 会自动帮您完成添加。</p></div>`,4),Nt={id:"editorsmanager-actions",tabindex:"-1"},jt=t("a",{class:"header-anchor",href:"#editorsmanager-actions","aria-hidden":"true"},"#",-1),Dt=o('<table><thead><tr><th>键</th><th>类型</th><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td>undo()</td><td>function</td><td>/</td><td>撤销</td></tr><tr><td>redo()</td><td>function</td><td>/</td><td>重做</td></tr><tr><td>format()</td><td>function</td><td>/</td><td>格式化</td></tr><tr><td>commented()</td><td>function</td><td>/</td><td>注释</td></tr><tr><td>getText()</td><td>function</td><td>string</td><td>获取编辑器文字内容</td></tr><tr><td>setText()</td><td>function</td><td>/</td><td>设置编辑器文字内容</td></tr><tr><td>check(show)</td><td>function</td><td>/</td><td>代码查错 <br> <strong>show</strong> (string): 展示结果</td></tr><tr><td>paste(text)</td><td>function</td><td>/</td><td>粘贴文字内容 <br> <strong>text</strong> (string): 文字内容</td></tr><tr><td>setTextSize(size)</td><td>function</td><td>/</td><td>设置文字大小 <br> <strong>size</strong> (number): 文字大小</td></tr><tr><td>search(text,gotoNext)</td><td>function</td><td>/</td><td>搜索 <br> <strong>text</strong> (number): 搜索内容 <br> <strong>gotoNext</strong> (boolean): 是否搜索下一个</td></tr><tr><td>getSelectedText()</td><td>function</td><td>string</td><td>获取已选择的文字</td></tr><tr><td>...</td><td>function</td><td>...</td><td>此 table 已设置为 metatable，因此您可以像调用 View 一样调用编辑器</td></tr></tbody></table><div class="custom-container tip"><p class="custom-container-title">提示</p><p>如果调用 <code>getXxx</code> 类型以外的 API 时，第一个返回值为编辑器是否支持该功能的 Boolean 值</p><p>对于编辑器插件开发者，您需要在自定义事件内返回 <code>true</code> ，表示编辑器支持此功能</p></div>',2),Rt={id:"editorsmanager-actionswitheditor",tabindex:"-1"},Wt=t("a",{class:"header-anchor",href:"#editorsmanager-actionswitheditor","aria-hidden":"true"},"#",-1),Kt=t("p",null,[e("和 "),t("a",{href:"#editorsManager-actions"},[t("code",null,"EditorsManager.actions")]),e(" 差不多，唯一的区别是他的方法们首个参数为 "),t("code",null,"editorConfig"),e(" ，以指定编辑器。")],-1),Ht={id:"editorsmanager-symbolbar",tabindex:"-1"},Ot=t("a",{class:"header-anchor",href:"#editorsmanager-symbolbar","aria-hidden":"true"},"#",-1),Jt=t("thead",null,[t("tr",null,[t("th",null,"键"),t("th",null,"类型"),t("th",null,"说明")])],-1),Ut=t("td",null,"function",-1),Xt=t("td",null,"获取符号栏要粘贴到文字",-1),Gt=t("td",null,"function (listener)",-1),Qt=t("td",null,"符号栏按钮点击时输入符号",-1),Yt=t("td",null,"function (listener)",-1),Zt=t("td",null,"符号栏按钮长按时显示预览",-1),$t=t("td",null,"function (listener)",-1),te=t("td",null,"符号栏按钮点击时输入符号点击事件",-1),ee=t("td",null,"newPsButton(text,config)",-1),ne=t("td",null,"function",-1),ae=t("br",null,null,-1),se=t("strong",null,"config",-1),le=t("tr",null,[t("td",null,"refresh(state)"),t("td",null,"function"),t("td",null,[e("刷新符号栏状态 "),t("br"),e(),t("strong",null,"state"),e(" (boolean): 开关状态")])],-1),oe=t("td",null,"table (list)",-1),de=t("td",null,"按钮配置",-1),ie={id:"editorsmanager-magnifier",tabindex:"-1"},re=t("a",{class:"header-anchor",href:"#editorsmanager-magnifier","aria-hidden":"true"},"#",-1),ce=t("ul",null,[t("li",null,[t("strong",null,"类型"),e("：MagnifierManager")])],-1),ue={id:"filesbrowsermanager",tabindex:"-1"},pe=t("a",{class:"header-anchor",href:"#filesbrowsermanager","aria-hidden":"true"},"#",-1),he=o("<p>这是文件浏览器管理器（侧滑）</p><p>未完待续</p><table><thead><tr><th>键</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>providers</td><td>table (map)</td><td>提供者映射</td></tr><tr><td>highlightIndex</td><td>number</td><td>高亮显示的项目索引（从 0 开始）</td></tr><tr><td>openState</td><td>boolean</td><td>侧滑打开状态</td></tr><tr><td>directoryFile</td><td>File</td><td>当前文件浏览器文件夹，未打开工程时为 <code>nil</code></td></tr></tbody></table>",3),me=t("thead",null,[t("tr",null,[t("th",null,"方法"),t("th",null,"说明")])],-1),ve=t("td",null,"判断是不是模块根路径",-1),be=t("td",null,[e("获取当前模块目录名称，如果当前路径不在模块内，则返回主模块名称"),t("br"),e(),t("strong",null,"fileRelativePath"),e(" (string): 相对与项目的路径")],-1),_e={id:"filestabmanager",tabindex:"-1"},ge=t("a",{class:"header-anchor",href:"#filestabmanager","aria-hidden":"true"},"#",-1),fe=t("p",null,"这是标签页管理器，兼职管理文件的读取与保存",-1),ke=t("thead",null,[t("tr",null,[t("th",null,"方法"),t("th",null,"说明")])],-1),xe=t("td",null,"自动通过当前编辑器获取滚动的数据库的键",-1),ye={id:"projectmanager",tabindex:"-1"},we=t("a",{class:"header-anchor",href:"#projectmanager","aria-hidden":"true"},"#",-1),qe=t("p",null,"这是项目管理器，只能管理单个项目，兼职提供文件路径的绝对路径转相对路径",-1),Me={id:"luaeditorhelper",tabindex:"-1"},Se=t("a",{class:"header-anchor",href:"#luaeditorhelper","aria-hidden":"true"},"#",-1),Le=o('<p>这是 LuaEditor 助手，可以方便处理很多东西</p><h2 id="其他-api" tabindex="-1"><a class="header-anchor" href="#其他-api" aria-hidden="true">#</a> 其他 API</h2><h3 id="快速检查文件是否相同" tabindex="-1"><a class="header-anchor" href="#快速检查文件是否相同" aria-hidden="true">#</a> 快速检查文件是否相同</h3><h4 id="issamepathfilebypath-filepath1-filepath2" tabindex="-1"><a class="header-anchor" href="#issamepathfilebypath-filepath1-filepath2" aria-hidden="true">#</a> isSamePathFileByPath(filePath1,filePath2)</h4><p>通过文件路径比较文件是否相同</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>filePath1</td><td><strong>string</strong>: 第一个文件路径</td></tr><tr><td>filePath2</td><td><strong>string</strong>: 第二个文件路径</td></tr></tbody></table><h4 id="issamepathfile-file1-file2" tabindex="-1"><a class="header-anchor" href="#issamepathfile-file1-file2" aria-hidden="true">#</a> isSamePathFile(file1,file2)</h4><p>通过文件本身比较文件是否相同</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>file1</td><td><strong>File</strong>: 第一个文件</td></tr><tr><td>file2</td><td><strong>File</strong>: 第二个文件</td></tr></tbody></table><h3 id="颜色类" tabindex="-1"><a class="header-anchor" href="#颜色类" aria-hidden="true">#</a> 颜色类</h3><h4 id="formatcolor2hex-color" tabindex="-1"><a class="header-anchor" href="#formatcolor2hex-color" aria-hidden="true">#</a> formatColor2Hex(color)</h4><p>将 number 类型的颜色值转换为字符串的16进制</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>color</td><td><strong>number</strong>: 颜色值</td></tr></tbody></table><table><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td>string</td><td>颜色值</td></tr></tbody></table><h4 id="getcolorandhex-text" tabindex="-1"><a class="header-anchor" href="#getcolorandhex-text" aria-hidden="true">#</a> getColorAndHex(text)</h4><p>获取文字内颜色的数值和16进制</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>text</td><td><strong>number</strong>: 待分析的文本</td></tr></tbody></table><table><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td>number</td><td>颜色值</td></tr><tr><td>string</td><td>颜色值</td></tr></tbody></table>',18),Te={id:"editorlayouts",tabindex:"-1"},Ce=t("a",{class:"header-anchor",href:"#editorlayouts","aria-hidden":"true"},"#",-1),Pe=o(`<p>编辑器布局等配置</p><h4 id="格式说明" tabindex="-1"><a class="header-anchor" href="#格式说明" aria-hidden="true">#</a> 格式说明</h4><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>EditorViewName<span class="token operator">=</span><span class="token punctuation">{</span>
  layout<span class="token operator">=</span><span class="token punctuation">{</span> <span class="token comment">-- 编辑器布局</span>
    <span class="token comment">-- ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  action<span class="token operator">=</span><span class="token punctuation">{</span> <span class="token comment">-- 编辑器的各种事件</span>
    undo<span class="token operator">=</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span>
    redo<span class="token operator">=</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span>
    format<span class="token operator">=</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span>
    search<span class="token operator">=</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span>
    getText<span class="token operator">=</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span>
    setText<span class="token operator">=</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">-- ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  init<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span>ids<span class="token punctuation">,</span>config<span class="token punctuation">)</span>
    <span class="token comment">-- 初始化事件</span>
    <span class="token comment">-- ...</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
  onTypefaceChangeListener<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span>ids<span class="token punctuation">,</span>config<span class="token punctuation">,</span>editor<span class="token punctuation">,</span>typeface<span class="token punctuation">,</span>boldTypeface<span class="token punctuation">,</span>italicTypeface<span class="token punctuation">)</span>
    <span class="token comment">-- typeface: 正常字体</span>
    <span class="token comment">-- boldTypeface: 加粗字体</span>
    <span class="token comment">-- italicTypeface: 意大利体（斜体）</span>
    <span class="token comment">-- ...</span>
  <span class="token keyword">end</span><span class="token punctuation">,</span>
  onSharedDataChangeListeners<span class="token operator">=</span><span class="token punctuation">{</span>
    editor_wordwrap<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span>ids<span class="token punctuation">,</span>config<span class="token punctuation">,</span>editor<span class="token punctuation">,</span>newValue<span class="token punctuation">)</span>
      <span class="token comment">-- ...</span>
    <span class="token keyword">end</span><span class="token punctuation">,</span>
    <span class="token comment">-- ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  supportScroll<span class="token operator">=</span><span class="token keyword">false</span><span class="token punctuation">;</span><span class="token comment">-- 支持滚动</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="luaeditor-说明" tabindex="-1"><a class="header-anchor" href="#luaeditor-说明" aria-hidden="true">#</a> LuaEditor 说明</h4><p>在 <code>LuaEditor</code> 下面，还有</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---将要添加到LuaEditor的关键词列表</span>
<span class="token comment">---更改后需要执行 application.set(&quot;luaeditor_initialized&quot;, false) ，以便在下次进入页面时更新</span>
<span class="token comment">---使用 activity.recreate() 重启页面</span>
<span class="token comment">---index 为方便更改内容，请使用 string 类型，当然 number 类型也能用</span>
<span class="token comment">---@type table&lt;string, String[]&gt;</span>
keywordsList<span class="token operator">=</span><span class="token punctuation">{</span>
  <span class="token comment">--一些常用但不自带的类</span>
  annotationsWords<span class="token operator">=</span><span class="token function">String</span><span class="token punctuation">{</span><span class="token string">&quot;class&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;alias&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;param&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;return&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;field&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;generic&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;vararg&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;language&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;example&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  otherWords<span class="token operator">=</span><span class="token function">String</span><span class="token punctuation">{</span><span class="token string">&quot;PhotoView&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;LuaLexerIteratorBuilder&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>

<span class="token comment">---@type table&lt;string, String[]&gt;</span>
<span class="token comment">---@see keywordsList</span>
packagesList<span class="token operator">=</span><span class="token punctuation">{</span>
  <span class="token comment">--otherPackages=Map{hello=String{&quot;world&quot;},jesse205=String{&quot;nb&quot;}},</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">警告</p><p>除此之外还有<code>jesse205Keywords</code>与<code>normalKeywords</code>，这些是编辑器默认的关键字，您不应该动这些东西</p></div><h3 id="showsnackbar-text" tabindex="-1"><a class="header-anchor" href="#showsnackbar-text" aria-hidden="true">#</a> showSnackBar(text)</h3><p>显示 SnackBar (底部提示)</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>text</td><td><strong>string</strong>: 显示的文字</td></tr></tbody></table><h3 id="openfileitps-path" tabindex="-1"><a class="header-anchor" href="#openfileitps-path" aria-hidden="true">#</a> openFileITPS(path)</h3><p>用外部应用打开文件</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>path</td><td><strong>string</strong>: 文件路径</td></tr></tbody></table><h3 id="runluafile-file-code" tabindex="-1"><a class="header-anchor" href="#runluafile-file-code" aria-hidden="true">#</a> runLuaFile(file,code)</h3><p>在单独的页面运行Lua代码</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>file</td><td><strong>File</strong>: 文件对象</td></tr><tr><td>code</td><td><strong>string</strong>: 代码</td></tr></tbody></table><div class="custom-container warning"><p class="custom-container-title">注意</p><p>当 <code>file</code> 不为 <code>nil</code> ，并且此文件存在时，则直接运行此文件，否则运行 <code>code</code> 中的代码</p></div><h3 id="showsnackbar-text-1" tabindex="-1"><a class="header-anchor" href="#showsnackbar-text-1" aria-hidden="true">#</a> showSnackBar(text)</h3><p>智能根据侧滑栏打开状态显示 SnackBar</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>text</td><td><strong>string</strong>: 提示的内容</td></tr></tbody></table><h3 id="gettableindexlist-mtable" tabindex="-1"><a class="header-anchor" href="#gettableindexlist-mtable" aria-hidden="true">#</a> getTableIndexList(mTable)</h3><p>获取table的索引列表</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>mTable</td><td><strong>table</strong>: 随便的 table</td></tr></tbody></table><table><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td>table (list)</td><td>mTable的索引列表</td></tr></tbody></table>`,24),Ee={id:"authorizehwapplicationpermissions-uri",tabindex:"-1"},Be=t("a",{class:"header-anchor",href:"#authorizehwapplicationpermissions-uri","aria-hidden":"true"},"#",-1),Ae=t("p",null,"目的是兼容华为文件管理的拖拽功能。",-1),Ie=t("p",null,[e("授予 Action 为 "),t("code",null,"android.intent.action.SEND"),e(" 并且 Flag 为 "),t("code",null,"268435456"),e("的所有应用、"),t("code",null,"com.huawei.desktop.systemui"),e(" 和 "),t("code",null,"com.huawei.desktop.explorer"),e(),t("code",null,"uri"),e(" 的权限（自动获取类型）。")],-1);function Fe(ze,Ve){const a=i("Badge"),s=i("router-link"),d=i("ExternalLinkIcon");return c(),u("div",null,[h,t("h1",m,[v,e(" main.aly "),n(a,{text:"文件",vertical:"middle"}),e(),n(a,{text:"table",vertical:"middle"}),e(),n(a,{text:"Map",vertical:"middle"})]),t("details",b,[_,t("nav",g,[t("ul",null,[t("li",null,[n(s,{to:"#事件说明"},{default:l(()=>[e("事件说明")]),_:1}),t("ul",null,[t("li",null,[n(s,{to:"#oncreate-savedinstancestate"},{default:l(()=>[e("onCreate(savedInstanceState) "),n(a,{text:"生命周期",vertical:"middle"})]),_:1})]),t("li",null,[n(s,{to:"#oncreateoptionsmenu-menu"},{default:l(()=>[e("onCreateOptionsMenu(menu)")]),_:1})]),t("li",null,[n(s,{to:"#onoptionsitemselected-item"},{default:l(()=>[e("onOptionsItemSelected(item)")]),_:1})]),t("li",null,[n(s,{to:"#onkeyshortcut-keycode-event"},{default:l(()=>[e("onKeyShortcut(keyCode, event)")]),_:1})]),t("li",null,[n(s,{to:"#onconfigurationchanged-config"},{default:l(()=>[e("onConfigurationChanged(config)")]),_:1})]),t("li",null,[n(s,{to:"#onresume"},{default:l(()=>[e("onResume() "),n(a,{text:"生命周期",vertical:"middle"})]),_:1})]),t("li",null,[n(s,{to:"#onpause"},{default:l(()=>[e("onPause() "),n(a,{text:"生命周期",vertical:"middle"}),e(),n(a,{text:"v5.1.1+",vertical:"middle"})]),_:1})]),t("li",null,[n(s,{to:"#onstart"},{default:l(()=>[e("onStart() "),n(a,{text:"生命周期",vertical:"middle"}),e(),n(a,{text:"v5.0.4+",vertical:"middle"})]),_:1})]),t("li",null,[n(s,{to:"#onstop"},{default:l(()=>[e("onStop() "),n(a,{text:"生命周期",vertical:"middle"}),e(),n(a,{text:"v5.0.4+",vertical:"middle"})]),_:1})]),t("li",null,[n(s,{to:"#ondestroy"},{default:l(()=>[e("onDestroy() "),n(a,{text:"生命周期",vertical:"middle"})]),_:1})]),t("li",null,[n(s,{to:"#onresult-name-action-content"},{default:l(()=>[e("onResult(name, action, content)")]),_:1})]),t("li",null,[n(s,{to:"#refreshmenusstate"},{default:l(()=>[e("refreshMenusState()")]),_:1})])])]),t("li",null,[n(s,{to:"#管理器、工具-api"},{default:l(()=>[e("管理器、工具 API")]),_:1}),t("ul",null,[t("li",null,[n(s,{to:"#editorsmanager"},{default:l(()=>[e("EditorsManager "),n(a,{text:"table",vertical:"middle"}),e(),n(a,{text:"Manager",vertical:"middle"})]),_:1})]),t("li",null,[n(s,{to:"#filesbrowsermanager"},{default:l(()=>[e("FilesBrowserManager "),n(a,{text:"table",vertical:"middle"}),e(),n(a,{text:"Manager",vertical:"middle"})]),_:1})]),t("li",null,[n(s,{to:"#filestabmanager"},{default:l(()=>[e("FilesTabManager "),n(a,{text:"table",vertical:"middle"}),e(),n(a,{text:"Manager",vertical:"middle"})]),_:1})]),t("li",null,[n(s,{to:"#projectmanager"},{default:l(()=>[e("ProjectManager "),n(a,{text:"table",vertical:"middle"}),e(),n(a,{text:"Manager",vertical:"middle"})]),_:1})]),t("li",null,[n(s,{to:"#luaeditorhelper"},{default:l(()=>[e("LuaEditorHelper "),n(a,{text:"table",vertical:"middle"}),e(),n(a,{text:"Manager",vertical:"middle"})]),_:1})])])]),t("li",null,[n(s,{to:"#其他-api"},{default:l(()=>[e("其他 API")]),_:1}),t("ul",null,[t("li",null,[n(s,{to:"#快速检查文件是否相同"},{default:l(()=>[e("快速检查文件是否相同")]),_:1})]),t("li",null,[n(s,{to:"#颜色类"},{default:l(()=>[e("颜色类")]),_:1})]),t("li",null,[n(s,{to:"#editorlayouts"},{default:l(()=>[e("editorLayouts "),n(a,{text:"table",vertical:"middle"}),e(),n(a,{text:"Map",vertical:"middle"})]),_:1})]),t("li",null,[n(s,{to:"#showsnackbar-text"},{default:l(()=>[e("showSnackBar(text)")]),_:1})]),t("li",null,[n(s,{to:"#openfileitps-path"},{default:l(()=>[e("openFileITPS(path)")]),_:1})]),t("li",null,[n(s,{to:"#runluafile-file-code"},{default:l(()=>[e("runLuaFile(file,code)")]),_:1})]),t("li",null,[n(s,{to:"#showsnackbar-text-1"},{default:l(()=>[e("showSnackBar(text)")]),_:1})]),t("li",null,[n(s,{to:"#gettableindexlist-mtable"},{default:l(()=>[e("getTableIndexList(mTable)")]),_:1})]),t("li",null,[n(s,{to:"#authorizehwapplicationpermissions-uri"},{default:l(()=>[e("authorizeHWApplicationPermissions(uri) "),n(a,{text:"v5.1.0+",vertical:"middle"})]),_:1})])])])])])]),f,k,t("h3",x,[y,e(" onCreate(savedInstanceState) "),n(a,{text:"生命周期",vertical:"middle"})]),t("p",null,[t("a",w,[e("Activity 生命周期：onCreate()"),n(d)])]),q,t("table",null,[M,t("tbody",null,[t("tr",null,[S,t("td",null,[e("如果返回 "),L,e(" 则停止执行接下来的操作（如：自动打开工程等）。 "),n(a,{text:"v5.0.3+",vertical:"middle"})])])])]),T,t("table",null,[C,t("tbody",null,[t("tr",null,[P,t("td",null,[e("如果返回 "),E,e(" 则停止执行接下来的操作（响应自带快捷键）。 "),n(a,{text:"v5.0.4+",vertical:"middle"})])])])]),B,t("table",null,[A,t("tbody",null,[t("tr",null,[I,t("td",null,[t("strong",null,[t("a",F,[e("Configuration"),n(d)])]),e(":新设备配置。此值不能为 "),z])])])]),t("h3",V,[N,e(" onResume() "),n(a,{text:"生命周期",vertical:"middle"})]),t("p",null,[t("a",j,[e("Activity 生命周期：onResume()"),n(d)])]),D,t("h3",R,[W,e(" onPause() "),n(a,{text:"生命周期",vertical:"middle"}),e(),n(a,{text:"v5.1.1+",vertical:"middle"})]),t("p",null,[t("a",K,[e("Activity 生命周期：onPause()"),n(d)])]),H,t("h3",O,[J,e(" onStart() "),n(a,{text:"生命周期",vertical:"middle"}),e(),n(a,{text:"v5.0.4+",vertical:"middle"})]),t("p",null,[t("a",U,[e("Activity 生命周期：onStart()"),n(d)])]),X,t("h3",G,[Q,e(" onStop() "),n(a,{text:"生命周期",vertical:"middle"}),e(),n(a,{text:"v5.0.4+",vertical:"middle"})]),t("p",null,[t("a",Y,[e("Activity 生命周期：onStop()"),n(d)])]),Z,t("h3",$,[tt,e(" onDestroy() "),n(a,{text:"生命周期",vertical:"middle"})]),t("p",null,[t("a",et,[e("Activity 生命周期：onDestroy()"),n(d)])]),nt,t("h3",at,[st,e(" EditorsManager "),n(a,{text:"table",vertical:"middle"}),e(),n(a,{text:"Manager",vertical:"middle"})]),t("table",null,[lt,t("tbody",null,[ot,dt,it,rt,t("tr",null,[t("td",null,[ct,e(),n(a,{text:"v5.1.1+",vertical:"middle"})]),ut,pt]),ht,mt,vt,bt,_t,gt,ft,kt,xt,t("tr",null,[t("td",null,[yt,e(),n(a,{text:"v5.0.4+",vertical:"middle"})]),wt,qt]),t("tr",null,[t("td",null,[Mt,e(),n(a,{text:"v5.1.0+",vertical:"middle"})]),St,Lt]),Tt,t("tr",null,[t("td",null,[e("magnifier "),n(a,{text:"v5.1.0+",vertical:"middle"})]),Ct,Pt])])]),Et,t("h4",Bt,[At,e(" EditorsManager.typefaceChangeListeners "),n(a,{text:"table",vertical:"middle"}),e(),n(a,{text:"List",vertical:"middle"}),e(),n(a,{text:"Listener",vertical:"middle"}),e(),n(a,{text:"v5.0.4+",vertical:"middle"})]),It,t("h4",Ft,[zt,e(" EditorsManager.sharedDataChangeListeners "),n(a,{text:"table",vertical:"middle"}),e(),n(a,{text:"Map",vertical:"middle"}),e(),n(a,{text:"Listener",vertical:"middle"}),e(),n(a,{text:"v5.1.0+",vertical:"middle"})]),Vt,t("h4",Nt,[jt,e(" EditorsManager.actions "),n(a,{text:"table",vertical:"middle"}),e(),n(a,{text:"Map",vertical:"middle"})]),Dt,t("h4",Rt,[Wt,e(" EditorsManager.actionsWithEditor "),n(a,{text:"table",vertical:"middle"}),e(),n(a,{text:"Map",vertical:"middle"}),e(),n(a,{text:"v5.1.1+",vertical:"middle"})]),Kt,t("h4",Ht,[Ot,e(" EditorsManager.symbolBar "),n(a,{text:"table",vertical:"middle"}),e(),n(a,{text:"Map",vertical:"middle"})]),t("table",null,[Jt,t("tbody",null,[t("tr",null,[t("td",null,[e("getReallPasteText(view) "),n(a,{text:"v5.1.0+",vertical:"middle"})]),Ut,Xt]),t("tr",null,[t("td",null,[e("onButtonClickListener(view) "),n(a,{text:"v5.1.0+",vertical:"middle"})]),Gt,Qt]),t("tr",null,[t("td",null,[e("onButtonLongClickListener(view) "),n(a,{type:"danger",text:"仅 v5.1.0",vertical:"middle"})]),Yt,Zt]),t("tr",null,[t("td",null,[e("psButtonClick(view) "),n(a,{type:"danger",text:"v5.1.0 废除",vertical:"middle"})]),$t,te]),t("tr",null,[ee,ne,t("td",null,[e("初始化一个符号栏按钮 "),ae,e(),se,e(" (table): 按钮配置 "),n(a,{text:"v5.1.0+",vertical:"middle"})])]),le,t("tr",null,[t("td",null,[e("symbols "),n(a,{text:"v5.1.0+",vertical:"middle"})]),oe,de])])]),t("h4",ie,[re,e(" EditorsManager.magnifier "),n(a,{text:"table",vertical:"middle"}),e(),n(a,{text:"Map",vertical:"middle"}),e(),n(a,{text:"v5.1.0+",vertical:"middle"})]),ce,t("h3",ue,[pe,e(" FilesBrowserManager "),n(a,{text:"table",vertical:"middle"}),e(),n(a,{text:"Manager",vertical:"middle"})]),he,t("table",null,[me,t("tbody",null,[t("tr",null,[t("td",null,[e("isModuleRootPath(path) "),n(a,{text:"v5.1.1+",vertical:"middle"})]),ve]),t("tr",null,[t("td",null,[e("getNowModuleDirName(fileRelativePath) "),n(a,{text:"v5.1.1+",vertical:"middle"})]),be])])]),t("h3",_e,[ge,e(" FilesTabManager "),n(a,{text:"table",vertical:"middle"}),e(),n(a,{text:"Manager",vertical:"middle"})]),fe,t("table",null,[ke,t("tbody",null,[t("tr",null,[t("td",null,[e("getScrollDbKeyByPath(path) "),n(a,{text:"v5.1.1+",vertical:"middle"})]),xe])])]),t("h3",ye,[we,e(" ProjectManager "),n(a,{text:"table",vertical:"middle"}),e(),n(a,{text:"Manager",vertical:"middle"})]),qe,t("h3",Me,[Se,e(" LuaEditorHelper "),n(a,{text:"table",vertical:"middle"}),e(),n(a,{text:"Manager",vertical:"middle"})]),Le,t("h3",Te,[Ce,e(" editorLayouts "),n(a,{text:"table",vertical:"middle"}),e(),n(a,{text:"Map",vertical:"middle"})]),Pe,t("h3",Ee,[Be,e(" authorizeHWApplicationPermissions(uri) "),n(a,{text:"v5.1.0+",vertical:"middle"})]),Ae,Ie])}const je=r(p,[["render",Fe],["__file","main.html.vue"]]);export{je as default};

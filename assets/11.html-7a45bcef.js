import{_ as n,p as a,q as s,a1 as e}from"./framework-ea2a9e6e.js";const o={},t=e(`<h1 id="使用布局表" tabindex="-1"><a class="header-anchor" href="#使用布局表" aria-hidden="true">#</a> 使用布局表</h1><p>使用布局表须导入 <code>android.view</code> 与 <code>android.widget</code> 包。</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>require <span class="token string">&quot;import&quot;</span>
import <span class="token string">&quot;android.widget.*&quot;</span>
import <span class="token string">&quot;android.view.*&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>布局表格式</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>layout<span class="token operator">=</span><span class="token punctuation">{</span>
    控件类名称<span class="token punctuation">,</span>
    id<span class="token operator">=</span>控件名称<span class="token punctuation">,</span>
    属性<span class="token operator">=</span>值<span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        子控件类名称<span class="token punctuation">,</span>
        id<span class="token operator">=</span>控件名称<span class="token punctuation">,</span>
        属性<span class="token operator">=</span>值<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如：</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>layout<span class="token operator">=</span><span class="token punctuation">{</span>
  LinearLayout<span class="token punctuation">,</span><span class="token comment">--视图类名称</span>
  id<span class="token operator">=</span><span class="token string">&quot;linear&quot;</span><span class="token punctuation">,</span><span class="token comment">--视图ID，可以在loadlayout后直接使用</span>
  orientation<span class="token operator">=</span><span class="token string">&quot;vertical&quot;</span><span class="token punctuation">,</span><span class="token comment">--属性与值</span>
  <span class="token punctuation">{</span>
    TextView<span class="token punctuation">,</span><span class="token comment">--子视图类名称</span>
    text<span class="token operator">=</span><span class="token string">&quot;hello AndroLua+&quot;</span><span class="token punctuation">,</span><span class="token comment">--属性与值</span>
    layout_width<span class="token operator">=</span><span class="token string">&quot;fill&quot;</span><span class="token comment">--布局属性</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用loadlayout函数解析布局表生成布局。</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>activity<span class="token punctuation">.</span><span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token function">loadlayout</span><span class="token punctuation">(</span>layout<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也可以简化为：</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>activity<span class="token punctuation">.</span><span class="token function">setContentView</span><span class="token punctuation">(</span>layout<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果使用单独文件布局(比如有个 <code>layout.aly</code> 布局文件)也可以简写为：</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>activity<span class="token punctuation">.</span><span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token string">&quot;layout&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此时不用导入布局文件。</p><ul><li>布局表支持大全部安卓控件属性</li><li>与安卓 XML 布局文件的不同点：</li><li><code>id</code> 表示在 Lua 中变量的名称，而不是安卓的可以 <code>findbyid</code> 的数字 <code>id</code></li><li><code>ImageView</code> 的 <code>src</code> 属性是当前目录图片名称或绝对文件路径图片或网络上的图片</li><li><code>layout_width</code> 与 <code>layout_height</code> 的值支持 <code>fill</code> 与 <code>wrap</code> 简写</li><li><code>onClick</code> 值为 lua 函数或 java <code>onClick</code> 接口或他们的全局变量名称</li><li>背景 <code>background</code> 支持背景图片，背景色与 <code>LuaDrawable</code> 自绘制背景，背景图片参数为是当前目录图片名称或绝对文件路径图片或网络上的图片，颜色同 <code>backgroundColor</code> ，自绘制背景参数为绘制函数或绘制函数的全局变量名称</li><li>控件背景色使用 <code>backgroundColor</code> 设置，值为 &quot;十六进制颜色值&quot;</li><li>尺寸单位支持 <code>px</code> ，<code>dp</code> ，<code>sp</code> ，<code>in</code> ，<code>mm</code> ，<code>%w</code> ，<code>%h</code></li><li>其他参考 <code>loadlayout</code> 与<code> loadbitmap</code></li></ul><div class="custom-container warning"><p class="custom-container-title">警告</p><p><code>%w</code> ，<code>%h</code> 因为有旋转、分屏、小窗甚至是有不同屏幕比例的手机适配问题，不推荐使用。</p><ol><li>这两个是获取可用显示的宽度和高度再计算，在布局加载完成后View的大小固定那么大（相当于计算完值并将值填进去进去），旋转不会重新计算并设置，就会导致 bug 出现。</li><li>因为使用比例，所以在分屏、小窗上很可能出现变形的情况。</li></ol></div>`,16),i=[t];function c(l,d){return a(),s("div",null,i)}const u=n(o,[["render",c],["__file","11.html.vue"]]);export{u as default};

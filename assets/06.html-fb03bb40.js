import{_ as n,p as a,q as s,a1 as e}from"./framework-ea2a9e6e.js";const t={},i=e(`<h1 id="使用事件" tabindex="-1"><a class="header-anchor" href="#使用事件" aria-hidden="true">#</a> 使用事件</h1><h2 id="普通写法" tabindex="-1"><a class="header-anchor" href="#普通写法" aria-hidden="true">#</a> 普通写法</h2><p>创建事件处理函数</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">function</span> <span class="token function">click</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;点击&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>把函数添加到事件接口</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>listener<span class="token operator">=</span>View<span class="token punctuation">.</span><span class="token function">OnClickListener</span><span class="token punctuation">{</span>onClick <span class="token operator">=</span> click<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>把接口注册到组件</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="使用匿名函数" tabindex="-1"><a class="header-anchor" href="#使用匿名函数" aria-hidden="true">#</a> 使用匿名函数</h2><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">{</span>
    onClick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;点击&quot;</span><span class="token punctuation">,</span>view<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
    <span class="token keyword">end</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="简写" tabindex="-1"><a class="header-anchor" href="#简写" aria-hidden="true">#</a> 简写</h2><p><code>onxxx</code> 事件可以简写</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>button<span class="token punctuation">.</span>onClick<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span>
    <span class="token function">print</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>部分 listener 不可简写</p></div>`,14),c=[i];function l(p,o){return a(),s("div",null,c)}const d=n(t,[["render",l],["__file","06.html.vue"]]);export{d as default};

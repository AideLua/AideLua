import{_ as a,p as e,q as n,a1 as s}from"./framework-ea2a9e6e.js";const o={},c=s(`<h1 id="lua-类型与-java-类型" tabindex="-1"><a class="header-anchor" href="#lua-类型与-java-类型" aria-hidden="true">#</a> Lua 类型与 Java 类型</h1><h2 id="number-类型" tabindex="-1"><a class="header-anchor" href="#number-类型" aria-hidden="true">#</a> number 类型</h2><p>在大多数情况下 Androlua 可以很好的处理 Lua 与 Java 类型之间的自动转换，但是 Java 的数值类型有多种( <code>double</code> , <code>float</code> , <code>long</code> , <code>int</code> , <code>short</code> , <code>byte</code> )，而Lua只有 <code>number</code> ，在必要的情况下可以使用类型的强制转换。</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>i<span class="token operator">=</span><span class="token function">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>i</code> 就是一个 Java 的 <code>int</code> 类型数据</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>d<span class="token operator">=</span><span class="token function">double</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>d</code> 是一个 Java 的 <code>double</code> 类型</p><h2 id="table-类型" tabindex="-1"><a class="header-anchor" href="#table-类型" aria-hidden="true">#</a> table 类型</h2><p>在调用 Java 方法时 Androlua 可以自动将 Lua 的 <code>table</code> 转换成 Java 的 <code>array</code> ，<code>Map</code> 或 <code>interface</code></p><p>Map 类型可以像使用 Lua 表一样简便。</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>map<span class="token operator">=</span><span class="token function">HashMap</span><span class="token punctuation">{</span>a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>b<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">}</span>
<span class="token function">print</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span>a<span class="token punctuation">)</span>
map<span class="token punctuation">.</span>a<span class="token operator">=</span><span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>取长度运算符 <code>#</code> 可以获取 Java 中 <code>array</code> ，<code>List</code> ，<code>Map</code> ，<code>Set</code>，<code>String</code>的长度。</p>`,12),d=[c];function t(p,l){return e(),n("div",null,d)}const i=a(o,[["render",t],["__file","13.html.vue"]]);export{i as default};

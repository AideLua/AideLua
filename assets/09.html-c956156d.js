import{_ as a,p as n,q as s,a1 as e}from"./framework-ea2a9e6e.js";const p={},c=e(`<h1 id="使用数组与-map" tabindex="-1"><a class="header-anchor" href="#使用数组与-map" aria-hidden="true">#</a> 使用数组与 map</h1><h2 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h2><p>使用 <code>类型{初始内容}</code> 或 <code>类型[大小]</code> 形式创建，使用 <code>数组[数字索引]</code> 形式取值和赋值</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> array<span class="token operator">=</span><span class="token function">float</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> array<span class="token operator">=</span>int<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>
<span class="token keyword">local</span> a<span class="token operator">=</span>array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>数组以 0 为第一个索引</p></div><h2 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> Map</h2><p>使用 <code>类型{初始内容}</code> 或 <code>类型()</code> 形式创建，使用 <code>map[索引]</code> 形式取值和赋值</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> map<span class="token operator">=</span><span class="token function">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span>a<span class="token operator">=</span><span class="token number">1</span>
map<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),o=[c];function t(l,r){return n(),s("div",null,o)}const d=a(p,[["render",t],["__file","09.html.vue"]]);export{d as default};

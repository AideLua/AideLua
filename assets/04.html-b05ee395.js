import{_ as a,p as n,q as s,a1 as e}from"./framework-ea2a9e6e.js";const t={},o=e(`<h1 id="创建布局与组件" tabindex="-1"><a class="header-anchor" href="#创建布局与组件" aria-hidden="true">#</a> 创建布局与组件</h1><p>安卓使用 <strong>布局</strong> 与 <strong>视图</strong> 管理和显示用户界面。</p><p><strong>布局</strong> 负责管理视图如何显示，如 <code>LinearLayout</code> 以线性排列视图，<code>FrameLayout</code> 则要求自行指定停靠与位置。<br><strong>视图</strong> 则显示具体内容，如 <code>TextView</code> 向用户展示文字内容，<code>Button</code> 响应用户点击事件。</p><p>但实际上基本上任何一个 <code>View</code> 都可以响应用户点击事件</p><p>创建一个线性布局</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>layout<span class="token operator">=</span><span class="token function">LinearLayout</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建一个按钮视图</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>button<span class="token operator">=</span><span class="token function">Button</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将按钮添加到布局</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>layout<span class="token punctuation">.</span><span class="token function">addView</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将刚才的内容设置为活动内容视图</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>activity<span class="token punctuation">.</span><span class="token function">setContentView</span><span class="token punctuation">(</span>layout<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p><code>activity</code> 是当前窗口的 <code>Context</code> 对象，如果你习惯也可以使用 <code>this</code> 。</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>button<span class="token operator">=</span><span class="token function">Button</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div>`,13),c=[o];function i(l,u){return n(),s("div",null,c)}const p=a(t,[["render",i],["__file","04.html.vue"]]);export{p as default};
